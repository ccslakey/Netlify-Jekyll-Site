<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-04-11T12:22:26-07:00</updated><id>http://localhost:4000/</id><title type="html">Netlify Responses Site</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Favorite and Least Favorite Support Tasks!</title><link href="http://localhost:4000/netlify/responses/2017/04/11/support-tasks.html" rel="alternate" type="text/html" title="Favorite and Least Favorite Support Tasks!" /><published>2017-04-11T10:00:00-07:00</published><updated>2017-04-11T10:00:00-07:00</updated><id>http://localhost:4000/netlify/responses/2017/04/11/support-tasks</id><content type="html" xml:base="http://localhost:4000/netlify/responses/2017/04/11/support-tasks.html">&lt;p&gt;These responses are based on &lt;a href=&quot;https://gist.github.com/fool/b0f254ff8c72a5765b6a9138249789d6&quot;&gt;this&lt;/a&gt; list of possible tasks.&lt;/p&gt;

&lt;h3 id=&quot;five-favorite-tasks&quot;&gt;Five Favorite tasks&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Create video tutorials to help teach users a specific feature or use case&lt;/p&gt;

    &lt;p&gt;When I’m learning how to use a new technology or searching for programming inspiration, I often look to online tutorials for a baseline of how to use, and what kind of things that technology is good for building. Video tutorials make this kind of learning more accessible than a simple blog post might, if done well.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Debug a customer’s build using a programming language and framework that you’ve never seen before&lt;/p&gt;

    &lt;p&gt;I have experience with Javascript, Ruby, and Python, but I also have interest in other programming languages and concepts that I know I’ve only been able to scratch the surface of. Being able to work in a new programming language is often an enjoyable treat and I feel I have the flexibility to work in strongly typed or functional programming languages such as C#, Java, or Elixir.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Write and maintain documentation for our software and blog posts for our website.&lt;/p&gt;

    &lt;p&gt;Documentation is one of the most important pieces of infrastructure for a company. Good docs not only make a technology more accessible, they also improve the likelihood of people sharing a technology with their friends or colleagues.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Analyze thousands of support tickets to spot trends to improve our product&lt;/p&gt;

    &lt;p&gt;Analyzing large amounts of information can be daunting for many, but I appreciate the opportunity to improve a product on a large scale. It makes sense that if there are hundreds or thousands of customers with the same or similar issue, a new approach or solution might fix many of these issues at once. When I see issues like these as a programmer, my instinct is always to fix the larger issue, rather than solving many individual problems.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Submit bug reports and potentially bug fixes to closed and open source projects that Netlify maintains on GitHub&lt;/p&gt;

    &lt;p&gt;I’ve always liked squashing bugs and solving edge cases. This often requires a deep dive into what is causing the bug, and submitting a pull request for a bug is always a great feeling!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;five-least-favorite-tasks&quot;&gt;Five Least Favorite Tasks&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Respond to 60+ support requests via email or chat every day&lt;/p&gt;

    &lt;p&gt;This sounds painful! While I consider myself solid at multitasking, I prefer to focus on one or several issues per day. On the other hand, if the focus of this task is more for quicker issues or directing larger issues to other staff, I could see myself keeping up with this task.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Find and recruit teammates for the support team&lt;/p&gt;

    &lt;p&gt;I’m not much of a recruiter - a big part of which is selling yourself and the company to someone who likely already has a job they like, and I’ve never been a great salesperson.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Manage a support team&lt;/p&gt;

    &lt;p&gt;I’m also not much of a manager. I know I’d be fine with onboarding new teammates or helping others with an issue they’re having, but it would take me at least a year or two working at Netlify to be comfortable managing others.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Work with prospective customers to explain our service and the pricing model&lt;/p&gt;

    &lt;p&gt;It’s already explained on your website, so it feels like self-explanatory. On the one hand, I feel like I’d be great at explaining pricing levels and features included, but on the other hand I feel like I would be responsible for selling potential customers on services.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Receive occasional phone calls requesting support from our highest-value customers&lt;/p&gt;

    &lt;p&gt;Although I’d feel comfortable with this after a while, I’d be nervous about talking on the phone with mission critical clients in my first few months. For me, experience === comfort.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">These responses are based on this list of possible tasks.</summary></entry><entry><title type="html">My favorite thing about providing tech support</title><link href="http://localhost:4000/netlify/responses/2017/04/11/providing-support.html" rel="alternate" type="text/html" title="My favorite thing about providing tech support" /><published>2017-04-11T10:00:00-07:00</published><updated>2017-04-11T10:00:00-07:00</updated><id>http://localhost:4000/netlify/responses/2017/04/11/providing-support</id><content type="html" xml:base="http://localhost:4000/netlify/responses/2017/04/11/providing-support.html">&lt;p&gt;My favorite aspect of providing technical support is difficult to decide on. On the one hand, I enjoy making someone’s day easier by providing them with a fix. I also greatly enjoy the process of bug-fixing, which often involves speaking with the client to understand the issue, and then digging through code to track logic and find where the issue resides. My favorite aspect is probably the understanding that goes into the actual fix, and the “journey”, so to speak that one takes to resolve an issue.&lt;/p&gt;</content><author><name></name></author><summary type="html">My favorite aspect of providing technical support is difficult to decide on. On the one hand, I enjoy making someone’s day easier by providing them with a fix. I also greatly enjoy the process of bug-fixing, which often involves speaking with the client to understand the issue, and then digging through code to track logic and find where the issue resides. My favorite aspect is probably the understanding that goes into the actual fix, and the “journey”, so to speak that one takes to resolve an issue.</summary></entry><entry><title type="html">My thoughts on Netlify</title><link href="http://localhost:4000/netlify/responses/2017/04/11/my-thoughts-on-netlify.html" rel="alternate" type="text/html" title="My thoughts on Netlify" /><published>2017-04-11T10:00:00-07:00</published><updated>2017-04-11T10:00:00-07:00</updated><id>http://localhost:4000/netlify/responses/2017/04/11/my-thoughts-on-netlify</id><content type="html" xml:base="http://localhost:4000/netlify/responses/2017/04/11/my-thoughts-on-netlify.html">&lt;p&gt;My experience with Netlify’s app was mostly positive. The quick deploy from the command line and simple integration with github really provided the “wow factor”. Unfortunately I ran into some issues setting up SSL and had to redeploy the site as a new app. Fortunately this was a pretty fast fix!&lt;/p&gt;</content><author><name></name></author><summary type="html">My experience with Netlify’s app was mostly positive. The quick deploy from the command line and simple integration with github really provided the “wow factor”. Unfortunately I ran into some issues setting up SSL and had to redeploy the site as a new app. Fortunately this was a pretty fast fix!</summary></entry><entry><title type="html">Making this site</title><link href="http://localhost:4000/netlify/responses/2017/04/11/making-this-site.html" rel="alternate" type="text/html" title="Making this site" /><published>2017-04-11T10:00:00-07:00</published><updated>2017-04-11T10:00:00-07:00</updated><id>http://localhost:4000/netlify/responses/2017/04/11/making-this-site</id><content type="html" xml:base="http://localhost:4000/netlify/responses/2017/04/11/making-this-site.html">&lt;p&gt;This static site was made with &lt;a href=&quot;https://gist.github.com/fool/b0f254ff8c72a5765b6a9138249789d6&quot;&gt;jekyll&lt;/a&gt; - a simple static site generator based on Ruby. Because of my experience with Ruby, I chose Jekyll over other similar generators such as Hugo or Hexo, which are Go and Javascript based, respectively. I chose Jekyll over Octopress because Octopress hasn’t seen any updates in a year or two. Although Gitbooks is my favorite static site generator, I decided not to use it because I feel like it fits a use case of documentation, whereas I wanted to have more of a blogging feel with these Q&amp;amp;A’s. One challenge I had initiall was silencing all the Gemfile errors and getting set up with my Ruby version. Beyond that and SSL setup, it’s been smooth sailing with Jekyll and Netlify!&lt;/p&gt;</content><author><name></name></author><summary type="html">This static site was made with jekyll - a simple static site generator based on Ruby. Because of my experience with Ruby, I chose Jekyll over other similar generators such as Hugo or Hexo, which are Go and Javascript based, respectively. I chose Jekyll over Octopress because Octopress hasn’t seen any updates in a year or two. Although Gitbooks is my favorite static site generator, I decided not to use it because I feel like it fits a use case of documentation, whereas I wanted to have more of a blogging feel with these Q&amp;amp;A’s. One challenge I had initiall was silencing all the Gemfile errors and getting set up with my Ruby version. Beyond that and SSL setup, it’s been smooth sailing with Jekyll and Netlify!</summary></entry><entry><title type="html">Improving the Job Posting and Test</title><link href="http://localhost:4000/netlify/responses/2017/04/11/improving-the-test.html" rel="alternate" type="text/html" title="Improving the Job Posting and Test" /><published>2017-04-11T10:00:00-07:00</published><updated>2017-04-11T10:00:00-07:00</updated><id>http://localhost:4000/netlify/responses/2017/04/11/improving-the-test</id><content type="html" xml:base="http://localhost:4000/netlify/responses/2017/04/11/improving-the-test.html">&lt;p&gt;It’s been a fun and slightly rare opportunity to show some work off during an interview process. While I’ve often shown my side projects, I haven’t had a chance to build anything for an interview in a while, and this was truly enjoyable. Perhaps some anonymized samples would help with giving a better idea of expectations, but that may be overthinking things.&lt;/p&gt;</content><author><name></name></author><summary type="html">It’s been a fun and slightly rare opportunity to show some work off during an interview process. While I’ve often shown my side projects, I haven’t had a chance to build anything for an interview in a while, and this was truly enjoyable. Perhaps some anonymized samples would help with giving a better idea of expectations, but that may be overthinking things.</summary></entry><entry><title type="html">Help! My Site Won’t Build!</title><link href="http://localhost:4000/netlify/responses/2017/04/11/Site-Wont-Build.html" rel="alternate" type="text/html" title="Help! My Site Won't Build!" /><published>2017-04-11T10:00:00-07:00</published><updated>2017-04-11T10:00:00-07:00</updated><id>http://localhost:4000/netlify/responses/2017/04/11/Site-Wont-Build</id><content type="html" xml:base="http://localhost:4000/netlify/responses/2017/04/11/Site-Wont-Build.html">&lt;p&gt;Without much information, there’s not a lot I can do for a client with this little information, so I would first ask for some info, i.e.:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What static site generator/framework are you using?&lt;/li&gt;
  &lt;li&gt;Is there an error or screenshot I can see?&lt;/li&gt;
  &lt;li&gt;Does the site work locally?&lt;/li&gt;
  &lt;li&gt;When you say it doesn’t build, is that on trying to deploy to Netlify or on your local machine? If it’s during Netlify deploy, please share the logs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Secondly, I would try to provide whatever general information is usually given/asked for to provide a more useful response on both mine and the customer’s side.&lt;/p&gt;</content><author><name></name></author><summary type="html">Without much information, there’s not a lot I can do for a client with this little information, so I would first ask for some info, i.e.:</summary></entry><entry><title type="html">This is a Redirect to google</title><link href="http://localhost:4000/netlify/responses/2017/04/11/Redirect.html" rel="alternate" type="text/html" title="This is a Redirect to google" /><published>2017-04-11T10:00:00-07:00</published><updated>2017-04-11T10:00:00-07:00</updated><id>http://localhost:4000/netlify/responses/2017/04/11/Redirect</id><content type="html" xml:base="http://localhost:4000/netlify/responses/2017/04/11/Redirect.html">&lt;p&gt;Hello World&lt;/p&gt;</content><author><name></name></author><summary type="html">Hello World</summary></entry><entry><title type="html">My Favorite Docs</title><link href="http://localhost:4000/netlify/responses/2017/04/11/My-Favorite-Docs.html" rel="alternate" type="text/html" title="My Favorite Docs" /><published>2017-04-11T10:00:00-07:00</published><updated>2017-04-11T10:00:00-07:00</updated><id>http://localhost:4000/netlify/responses/2017/04/11/My-Favorite-Docs</id><content type="html" xml:base="http://localhost:4000/netlify/responses/2017/04/11/My-Favorite-Docs.html">&lt;p&gt;My favorite documentation is from &lt;a href=&quot;https://www.twilio.com/docs/&quot;&gt;Twilio&lt;/a&gt;. They provide great quickstarts, in-depth guides on how to accomplish specific tasks, and best of all: they provide examples in multiple languages!&lt;/p&gt;</content><author><name></name></author><summary type="html">My favorite documentation is from Twilio. They provide great quickstarts, in-depth guides on how to accomplish specific tasks, and best of all: they provide examples in multiple languages!</summary></entry><entry><title type="html">DNS Challenges for less-technical end users</title><link href="http://localhost:4000/netlify/responses/2017/04/11/DNS-challenges.html" rel="alternate" type="text/html" title="DNS Challenges for less-technical end users" /><published>2017-04-11T10:00:00-07:00</published><updated>2017-04-11T10:00:00-07:00</updated><id>http://localhost:4000/netlify/responses/2017/04/11/DNS-challenges</id><content type="html" xml:base="http://localhost:4000/netlify/responses/2017/04/11/DNS-challenges.html">&lt;p&gt;DNS can be a complicated process to explain to someone who doesn’t deal with DNS on a regular basis. The average internet user knows they can type in a search bar for a url or search term, but what happens behind the scenes often needs demystifying, even for technically proficient users.&lt;/p&gt;

&lt;p&gt;The most helpful example I have found is that of the phone book: a lookup device where a user friendly is equated with a machine friendly (phone) number. Most people seem to understand this metaphor, at least on a higher level.&lt;/p&gt;</content><author><name></name></author><summary type="html">DNS can be a complicated process to explain to someone who doesn’t deal with DNS on a regular basis. The average internet user knows they can type in a search bar for a url or search term, but what happens behind the scenes often needs demystifying, even for technically proficient users.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2017/04/10/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-04-10T23:47:18-07:00</published><updated>2017-04-10T23:47:18-07:00</updated><id>http://localhost:4000/jekyll/update/2017/04/10/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/04/10/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>